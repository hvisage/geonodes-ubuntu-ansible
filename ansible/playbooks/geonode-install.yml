---

- hosts: all
  become: yes
  tags: APT
  tasks:
  - name: needed for apt
    shell: apt-get install python-apt

  - name: apt keys for postgresql apt repo
    apt_key: url={{item}} state=present
    with_items:
      - https://www.postgresql.org/media/keys/ACCC4CF8.asc

  - name: apt keys id for QGIS apt repo
    apt_key: id=3FF5FFCAD71472C4 keyserver=keyserver.ubuntu.com state=present

  - name: apt keys id for QGIS apt repo
    apt_key: id=073D307A618E5811 keyserver=keyserver.ubuntu.com state=present

  - name: The APT repositories
    apt_repository: repo={{item}} state=present update_cache=yes
    with_items:
      - 'ppa:nginx/stable'
      - 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main'
      - 'deb http://qgis.org/debian xenial main'
  #
  # - name: do apt-get update_cache
  #   apt: upgrade=dist update_cache=yes

  - name: packages to install
    apt: name={{item}} state=latest update_cache=yes
    with_items:
      - git
      - python-pip
      - python-virtualenv
      - apache2
      - libapache2-mod-wsgi
      - libapache2-mod-fcgid
      - qgis-server
      - python-qgis
      - postgresql-9.5
      - postgresql-contrib-9.5
#      - postgresql-9.5-postgis
#      - postgresql-9.5-postgis-scripts
      - gcc
      - gdal-bin
      - gettext
      - libgeos-dev
      - libjpeg-dev
      - libpng-dev
      - libpq-dev
      - libproj-dev
      - libxml2-dev
      - libxslt-dev
      - python-dev
      - python-gdal
      - python-imaging
      - python-pastescript
      - python-psycopg2
      - python-urlgrabber


- hosts: all
  name: Doing the Apache and module stuff
  become: yes
  roles:
  - role: apache-fcgi



- hosts: all
  name: OTF plugins
  become: yes
  tags: OTF
  tasks:
  - name: directories
    file: path=/opt/qgis-server/plugins
      recurse=yes
      state=directory

  - name: git clone
    git:
      clone=yes
      dest=/opt/qgis-server/plugins/otf-project
      repo=https://github.com/kartoza/otf-project.git
      version=0a44fa4ccc40a5645af7d4349c63b9bb2f995595
#Here we need to still do some configs to test, or do we?


# <add-experssions-of-choice>
# https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
# the following will only work with pipelining as per ansible.cfg
- hosts: all
  name: postgresql users etc.
  tags: postgres
  become: yes
  become_user: postgres
  tasks:
  - name: shell
    shell: id -a
  - name: create geonode users
    postgresql_user:
      name=geonode
      password="geonode"
      state=present
  - name: create geonode database
    postgresql_db: name=geonode
      state=present
      owner=geonode
  - name: fix local logins from unix to md5
    #This is much VooDoo... much like radio waves and DX propagation
    lineinfile:
      state=present
      dest=/etc/postgresql/9.5/main/pg_hba.conf
      backrefs=yes
      regexp=(#*.*local.*all.*all.*)peer
      line='\1 md5'
      backup=yes
  # - name: restart postgresql
  #   services:
  #



- hosts: all
  name: geonode gits
  tags: geonode-git
  become: yes
  tasks:
  - name: directories
    file: path=/home/data state=directory recurse=yes

  - name: git pull geonode
    git:
      clone=yes
      dest=/home/data/geonode
      depth=1
      repo=https://github.com/geonode/geonode.git
      # version=qgis_server

#HEre we still need to do some virtualenv stuff...

- hosts: all
  name: geonode virtualenv
  tags: virtualenv
  become: yes
  tasks:
  - name: create virtualev setup
    pip:
      name=pip version=8.1.1
      chdir=/home/data
      virtualenv=/home/data/venv
      virtualenv_site_packages=yes
      state=present

#I Honestly don't like this hackering:
  - name: pip install -e .
    shell: /home/data/venv/bin/pip install -e /home/data/geonode
    # pip:
    #   virtualenv=/home/data/venv
    #   chdir=/home/data/geonode
    #   extra_args="-e ."
    #
  - name: pip install https://github.com/kartoza/geonode_qgis_server/archive/develop.zip
    # shell: /home/data/venv/bin/pip install https://github.com/kartoza/geonode_qgis_server/archive/develop.zip
    pip:
      virtualenv=/home/data/env
      chdir=/home/data/geonode
      name=https://github.com/kartoza/geonode_qgis_server/archive/develop.zip
#Don't have any idea yet to run the rest in that environment,
# other than to create a script to do it, and push that up

  - name: python manage.py migrate base
    command: /home/data/venv/bin/python manage.py migrate base chdir=/home/data/geonode
    ignore_errors: yes

  - name: python manage.py migrate layers
    command: /home/data/venv/bin/python manage.py migrate layers chdir=/home/data/geonode
    ignore_errors: yes

  - name: python manage.py syncdb
    command: /home/data/venv/bin/python manage.py syncdb chdir=/home/data/geonode

  - name: python manage.py createsuperuser
    command: /home/data/venv/bin/python manage.py createsuperuser chdir=/home/data/geonode

  - name: python manage.py collectstatic
    command: /home/data/venv/bin/python manage.py  collectstatic --noinput chdir=/home/data/geonode

  - name: cp local_settings.py.qgis.sample local_settings.py
    command: cp local_settings.py.qgis.sample local_settings.py chdir=/home/data/geonode/geonode

  - name: TIME_ZONE = 'America/Chicago'
    lineinfile:
      dest=/home/data/geonode/geonode/local_settings.py
      regexp='^TIME_ZONE'
      line='TIME_ZONE=\'Africa/Johannesburg\''
  - name: siteurl
    lineinfile:
      dest=/home/data/geonode/geonode/local_settings.py
      regexp="^SITEURL"
      line='SITEURL = \'http://localhost:8000\''

  - name: /home/data/geonode/geonode/qgis_layer
    file:
      dest=/home/data/geonode/geonode/qgis_layer
      state=directory
      owner=www-data
      recurse=yes


  - name: /home/data/geonode/geonode/qgis_tiles
    file:
      dest=/home/data/geonode/geonode/qgis_tiles
      state=directory
      owner=www-data
      recurse=yes


  - name: /home/data/geonode/geonode/uploaded
    file:
      dest=/home/data/geonode/geonode/uploaded
      state=directory
      owner=www-data
      recurse=yes

  - name: 000-default.config
    template:
      dest=/etc/apache2/sites-available/000-default
      mode=0644
      src=../files/000-default.tmpl

  - name: a2dissite 001-qgis-server
    command: a2dissite 001-qgis-server
    ignore_errors: yes

  - name: a2ensite 000-default
    command: a2ensite 000-default

  - name: service apache2 reload
    service:
      name=apache2
      state=reloaded
      enabled=yes

---

- hosts: all
  become: yes
  tags: APT
  tasks:
  - name: needed for apt
    shell: apt-get install python-apt

  - name: apt keys for postgresql apt repo
    apt_key: url={{item}} state=present
    with_items:
      - https://www.postgresql.org/media/keys/ACCC4CF8.asc

  - name: apt keys id for QGIS apt repo
    apt_key: id=3FF5FFCAD71472C4 keyserver=keyserver.ubuntu.com state=present

  - name: The APT repositories
    apt_repository: repo={{item}} state=present update_cache=yes
    with_items:
      - 'ppa:nginx/stable'
      - 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main'
      - 'deb http://qgis.org/debian xenial main'

  - name: packages to install
    apt: name={{item}} state=present update_cache=yes
    with_items:
      - git
      - python-pip
      - python-virtualenv
      - apache2
      - libapache2-mod-wsgi
      - libapache2-mod-fcgid
      - qgis-server
      - python-qgis
      - postgresql-9.5
      - postgresql-contrib-9.5
#      - postgresql-9.5-postgis
#      - postgresql-9.5-postgis-scripts
      - gcc
      - gdal-bin
      - gettext
      - libgeos-dev
      - libjpeg-dev
      - libpng-dev
      - libpq-dev
      - libproj-dev
      - libxml2-dev
      - libxslt-dev
      - python-dev
      - python-gdal
      - python-imaging
      - python-pastescript
      - python-psycopg2
      - python-urlgrabber


- hosts: all
  name: Doing the Apache and module stuff
  become: yes
  roles:
  - role: apache-fcgi
# <add-experssions-of-choice>
# https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
# the following will only work with pipelining as per ansible.cfg
- hosts: all
  name: postgresql users etc.
  tags: postgres
  become: yes
  become_user: postgres
  tasks:
  - name: shell
    shell: id -a
  - name: create geonode users
    postgresql_user:
      name=geonode
      password="geonode"
      state=present
  - name: create geonode database
    postgresql_db: name=geonode
      state=present
      owner=geonode
  - name: fix local logins from unix to md5
    #This is much VooDoo... much like radio waves and DX propagation
    lineinfile:
      state=present
      dest=/etc/postgresql/9.5/main/pg_hba.conf
      backrefs=yes
      regexp=(#*.*local.*all.*all.*)peer
      line='\1 md5'
      backup=yes
  # - name: restart postgresql
  #   services:
  #
